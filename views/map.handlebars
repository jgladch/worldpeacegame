<!DOCTYPE html>
<meta charset="utf-8">
<title>Non-Contiguous Cartogram</title>
<style>

.land {
  fill: #fff;
  stroke: #ccc;
}

.state {
  fill: #ccc;
  stroke: #666;
}

.html {
  height: 100%;
  width: 100%;
}

.body {
  width: 100%;
  height: 100%;
}

</style>
<body>

  <div id="vis"></div>

<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>
  var height = 400;
  var width  = 400;

  var vis = d3.select("#vis").append("svg")
      .attr("width", width).attr("height", height)

  d3.json("/convert-json/AGO.geo.json", function(json) {

      var projection = d3.geo.projection(function(x, y) { return [x, y];})
        .precision(0).scale(1).translate([0, 0]);

      var path = d3.geo.path().projection(projection);

      var bounds = path.bounds(json.features[0]),
          scale  = .95 / Math.max((bounds[1][0] - bounds[0][0]) / width, 
                  (bounds[1][1] - bounds[0][1]) / height),
          transl = [(width - scale * (bounds[1][0] + bounds[0][0])) / 2, 
                  (height - scale * (bounds[1][1] + bounds[0][1])) / 2];

      projection.scale(scale).translate(transl);

      // vis.selectAll("path").data(json.features).enter().append("path")
      //   .attr("d", path)
      //   .style("fill", "#D0D0D0")
      //   .style("stroke-width", "0.5px")
      //   .style("stroke", "black")
    });

// d3.json("/json/world/world-50m.json", function(error, us) {
//   if (error) throw error;

//   svg.append("path")
//       .datum(topojson.feature(us, us.objects.land))
//       .attr("class", "land")
//       .attr("d", path);

//   // svg.selectAll(".state")
//   //     .data(topojson.feature(us, us.objects.states).features)
//   //   .enter().append("path")
//   //     .attr("class", "state")
//   //     .attr("d", path)
//   //     .attr("transform", function(d) {
//   //       var centroid = path.centroid(d),
//   //           x = centroid[0],
//   //           y = centroid[1];
//   //       return "translate(" + x + "," + y + ")"
//   //           + "scale(" + Math.sqrt(valueById[d.id] * 5 || 0) + ")"
//   //           + "translate(" + -x + "," + -y + ")";
//   //     })
//   //     .style("stroke-width", function(d) {
//   //       return 1 / Math.sqrt(valueById[d.id] * 5 || 1);
//   //     });
// });

</script>